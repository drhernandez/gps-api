/*
 * This file is generated by jOOQ.
 */
package com.tesis.jooq.tables.pojos;


import com.tesis.exceptions.ParseArgsException;
import com.tesis.utils.JsonUtils;

import java.io.Serializable;
import java.sql.Timestamp;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Trackings implements Serializable {

    private static final long serialVersionUID = -1722364462;

    private Long      id;
    private Timestamp deletedAt;
    private Timestamp lastUpdated;
    private Long      deviceId;
    private Float     lat;
    private Float     long_;
    private Integer   sat;
    private Integer   hdop;
    private Timestamp time;

    public Trackings() {}

    public Trackings(Trackings value) {
        this.id = value.id;
        this.deletedAt = value.deletedAt;
        this.lastUpdated = value.lastUpdated;
        this.deviceId = value.deviceId;
        this.lat = value.lat;
        this.long_ = value.long_;
        this.sat = value.sat;
        this.hdop = value.hdop;
        this.time = value.time;
    }

    public Trackings(
        Long      id,
        Timestamp deletedAt,
        Timestamp lastUpdated,
        Long      deviceId,
        Float     lat,
        Float     long_,
        Integer   sat,
        Integer   hdop,
        Timestamp time
    ) {
        this.id = id;
        this.deletedAt = deletedAt;
        this.lastUpdated = lastUpdated;
        this.deviceId = deviceId;
        this.lat = lat;
        this.long_ = long_;
        this.sat = sat;
        this.hdop = hdop;
        this.time = time;
    }

    public Trackings(String[] args) throws ParseArgsException {
        try {
            this.id = null;
            this.deletedAt = null;
            this.lastUpdated = null;
            this.deviceId = Long.valueOf(args[0]);
            this.lat = Float.valueOf(args[1]);
            this.long_ = Float.valueOf(args[2]);
            this.sat = Integer.valueOf(args[3]);
            this.hdop = Integer.valueOf(args[4]);
            this.time = Timestamp.valueOf(LocalDateTime.now());
        } catch (Exception e) {
            throw new ParseArgsException("Cannot create new tracking from args: " + JsonUtils.INSTANCE.GSON().toJson(args));
        }
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Timestamp getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Timestamp deletedAt) {
        this.deletedAt = deletedAt;
    }

    public Timestamp getLastUpdated() {
        return this.lastUpdated;
    }

    public void setLastUpdated(Timestamp lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    public Long getDeviceId() {
        return this.deviceId;
    }

    public void setDeviceId(Long deviceId) {
        this.deviceId = deviceId;
    }

    public Float getLat() {
        return this.lat;
    }

    public void setLat(Float lat) {
        this.lat = lat;
    }

    public Float getLong() {
        return this.long_;
    }

    public void setLong(Float long_) {
        this.long_ = long_;
    }

    public Integer getSat() {
        return this.sat;
    }

    public void setSat(Integer sat) {
        this.sat = sat;
    }

    public Integer getHdop() {
        return this.hdop;
    }

    public void setHdop(Integer hdop) {
        this.hdop = hdop;
    }

    public Timestamp getTime() {
        return this.time;
    }

    public void setTime(Timestamp time) {
        this.time = time;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Trackings (");

        sb.append(id);
        sb.append(", ").append(deletedAt);
        sb.append(", ").append(lastUpdated);
        sb.append(", ").append(deviceId);
        sb.append(", ").append(lat);
        sb.append(", ").append(long_);
        sb.append(", ").append(sat);
        sb.append(", ").append(hdop);
        sb.append(", ").append(time);

        sb.append(")");
        return sb.toString();
    }
}
