/*
 * This file is generated by jOOQ.
 */
package com.tesis.jooq.tables.records;


import com.tesis.jooq.tables.BrandLines;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrandLinesRecord extends UpdatableRecordImpl<BrandLinesRecord> implements Record3<Long, String, Long> {

    private static final long serialVersionUID = -602661245;

    /**
     * Setter for <code>public.brand_lines.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.brand_lines.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.brand_lines.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.brand_lines.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.brand_lines.brand_id</code>.
     */
    public void setBrandId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.brand_lines.brand_id</code>.
     */
    public Long getBrandId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BrandLines.BRAND_LINES.ID;
    }

    @Override
    public Field<String> field2() {
        return BrandLines.BRAND_LINES.NAME;
    }

    @Override
    public Field<Long> field3() {
        return BrandLines.BRAND_LINES.BRAND_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long component3() {
        return getBrandId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Long value3() {
        return getBrandId();
    }

    @Override
    public BrandLinesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BrandLinesRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public BrandLinesRecord value3(Long value) {
        setBrandId(value);
        return this;
    }

    @Override
    public BrandLinesRecord values(Long value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BrandLinesRecord
     */
    public BrandLinesRecord() {
        super(BrandLines.BRAND_LINES);
    }

    /**
     * Create a detached, initialised BrandLinesRecord
     */
    public BrandLinesRecord(Long id, String name, Long brandId) {
        super(BrandLines.BRAND_LINES);

        set(0, id);
        set(1, name);
        set(2, brandId);
    }
}
