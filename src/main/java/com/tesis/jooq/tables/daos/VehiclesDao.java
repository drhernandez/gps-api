/*
 * This file is generated by jOOQ.
 */
package com.tesis.jooq.tables.daos;


import com.google.inject.Inject;
import com.tesis.jooq.tables.Vehicles;
import com.tesis.jooq.tables.records.VehiclesRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VehiclesDao extends DAOImpl<VehiclesRecord, com.tesis.jooq.tables.pojos.Vehicles, Long> {

    /**
     * Create a new VehiclesDao without any configuration
     */
    public VehiclesDao() {
        super(Vehicles.VEHICLES, com.tesis.jooq.tables.pojos.Vehicles.class);
    }

    /**
     * Create a new VehiclesDao with an attached configuration
     */
    @Inject
    public VehiclesDao(Configuration configuration) {
        super(Vehicles.VEHICLES, com.tesis.jooq.tables.pojos.Vehicles.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.tesis.jooq.tables.pojos.Vehicles object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.tesis.jooq.tables.pojos.Vehicles> fetchById(Long... values) {
        return fetch(Vehicles.VEHICLES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.tesis.jooq.tables.pojos.Vehicles fetchOneById(Long value) {
        return fetchOne(Vehicles.VEHICLES.ID, value);
    }
}
