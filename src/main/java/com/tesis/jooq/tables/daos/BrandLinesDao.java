/*
 * This file is generated by jOOQ.
 */
package com.tesis.jooq.tables.daos;


import com.tesis.jooq.tables.BrandLines;
import com.tesis.jooq.tables.records.BrandLinesRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrandLinesDao extends DAOImpl<BrandLinesRecord, com.tesis.jooq.tables.pojos.BrandLines, Long> {

    /**
     * Create a new BrandLinesDao without any configuration
     */
    public BrandLinesDao() {
        super(BrandLines.BRAND_LINES, com.tesis.jooq.tables.pojos.BrandLines.class);
    }

    /**
     * Create a new BrandLinesDao with an attached configuration
     */
    public BrandLinesDao(Configuration configuration) {
        super(BrandLines.BRAND_LINES, com.tesis.jooq.tables.pojos.BrandLines.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.tesis.jooq.tables.pojos.BrandLines object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.tesis.jooq.tables.pojos.BrandLines> fetchById(Long... values) {
        return fetch(BrandLines.BRAND_LINES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.tesis.jooq.tables.pojos.BrandLines fetchOneById(Long value) {
        return fetchOne(BrandLines.BRAND_LINES.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.tesis.jooq.tables.pojos.BrandLines> fetchByName(String... values) {
        return fetch(BrandLines.BRAND_LINES.NAME, values);
    }

    /**
     * Fetch records that have <code>brand_id IN (values)</code>
     */
    public List<com.tesis.jooq.tables.pojos.BrandLines> fetchByBrandId(Long... values) {
        return fetch(BrandLines.BRAND_LINES.BRAND_ID, values);
    }
}
