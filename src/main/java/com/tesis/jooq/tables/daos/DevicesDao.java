/*
 * This file is generated by jOOQ.
 */
package com.tesis.jooq.tables.daos;


import com.tesis.jooq.tables.Devices;
import com.tesis.jooq.tables.records.DevicesRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DevicesDao extends DAOImpl<DevicesRecord, com.tesis.jooq.tables.pojos.Devices, Long> {

    /**
     * Create a new DevicesDao without any configuration
     */
    public DevicesDao() {
        super(Devices.DEVICES, com.tesis.jooq.tables.pojos.Devices.class);
    }

    /**
     * Create a new DevicesDao with an attached configuration
     */
    public DevicesDao(Configuration configuration) {
        super(Devices.DEVICES, com.tesis.jooq.tables.pojos.Devices.class, configuration);
    }

    @Override
    public Long getId(com.tesis.jooq.tables.pojos.Devices object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Devices.DEVICES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchById(Long... values) {
        return fetch(Devices.DEVICES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.tesis.jooq.tables.pojos.Devices fetchOneById(Long value) {
        return fetchOne(Devices.DEVICES.ID, value);
    }

    /**
     * Fetch records that have <code>physical_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchRangeOfPhysicalId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Devices.DEVICES.PHYSICAL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>physical_id IN (values)</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchByPhysicalId(Long... values) {
        return fetch(Devices.DEVICES.PHYSICAL_ID, values);
    }

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchRangeOfDeletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Devices.DEVICES.DELETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchByDeletedAt(LocalDateTime... values) {
        return fetch(Devices.DEVICES.DELETED_AT, values);
    }

    /**
     * Fetch records that have <code>last_updated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchRangeOfLastUpdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Devices.DEVICES.LAST_UPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_updated IN (values)</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchByLastUpdated(LocalDateTime... values) {
        return fetch(Devices.DEVICES.LAST_UPDATED, values);
    }

    /**
     * Fetch records that have <code>model BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchRangeOfModel(String lowerInclusive, String upperInclusive) {
        return fetchRange(Devices.DEVICES.MODEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model IN (values)</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchByModel(String... values) {
        return fetch(Devices.DEVICES.MODEL, values);
    }

    /**
     * Fetch records that have <code>software_version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchRangeOfSoftwareVersion(String lowerInclusive, String upperInclusive) {
        return fetchRange(Devices.DEVICES.SOFTWARE_VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>software_version IN (values)</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchBySoftwareVersion(String... values) {
        return fetch(Devices.DEVICES.SOFTWARE_VERSION, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Devices.DEVICES.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.tesis.jooq.tables.pojos.Devices> fetchByStatus(String... values) {
        return fetch(Devices.DEVICES.STATUS, values);
    }
}
