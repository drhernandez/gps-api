/*
 * This file is generated by jOOQ.
 */
package com.tesis.jooq.tables;


import com.tesis.jooq.Keys;
import com.tesis.jooq.Public;
import com.tesis.jooq.tables.records.SpeedAlertsHistoryRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpeedAlertsHistory extends TableImpl<SpeedAlertsHistoryRecord> {

    private static final long serialVersionUID = 1052148464;

    /**
     * The reference instance of <code>public.speed_alerts_history</code>
     */
    public static final SpeedAlertsHistory SPEED_ALERTS_HISTORY = new SpeedAlertsHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SpeedAlertsHistoryRecord> getRecordType() {
        return SpeedAlertsHistoryRecord.class;
    }

    /**
     * The column <code>public.speed_alerts_history.time</code>.
     */
    public final TableField<SpeedAlertsHistoryRecord, LocalDateTime> TIME = createField(DSL.name("time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.speed_alerts_history.alert_id</code>.
     */
    public final TableField<SpeedAlertsHistoryRecord, Long> ALERT_ID = createField(DSL.name("alert_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.speed_alerts_history.speed</code>.
     */
    public final TableField<SpeedAlertsHistoryRecord, Float> SPEED = createField(DSL.name("speed"), org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * Create a <code>public.speed_alerts_history</code> table reference
     */
    public SpeedAlertsHistory() {
        this(DSL.name("speed_alerts_history"), null);
    }

    /**
     * Create an aliased <code>public.speed_alerts_history</code> table reference
     */
    public SpeedAlertsHistory(String alias) {
        this(DSL.name(alias), SPEED_ALERTS_HISTORY);
    }

    /**
     * Create an aliased <code>public.speed_alerts_history</code> table reference
     */
    public SpeedAlertsHistory(Name alias) {
        this(alias, SPEED_ALERTS_HISTORY);
    }

    private SpeedAlertsHistory(Name alias, Table<SpeedAlertsHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private SpeedAlertsHistory(Name alias, Table<SpeedAlertsHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SpeedAlertsHistory(Table<O> child, ForeignKey<O, SpeedAlertsHistoryRecord> key) {
        super(child, key, SPEED_ALERTS_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<SpeedAlertsHistoryRecord> getPrimaryKey() {
        return Keys.SPEED_ALERTS_HISTORY_PKEY;
    }

    @Override
    public List<UniqueKey<SpeedAlertsHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<SpeedAlertsHistoryRecord>>asList(Keys.SPEED_ALERTS_HISTORY_PKEY);
    }

    @Override
    public List<ForeignKey<SpeedAlertsHistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SpeedAlertsHistoryRecord, ?>>asList(Keys.SPEED_ALERTS_HISTORY__SPEED_ALERTS_HISTORY_ALERT_ID_FKEY);
    }

    public SpeedAlerts speedAlerts() {
        return new SpeedAlerts(this, Keys.SPEED_ALERTS_HISTORY__SPEED_ALERTS_HISTORY_ALERT_ID_FKEY);
    }

    @Override
    public SpeedAlertsHistory as(String alias) {
        return new SpeedAlertsHistory(DSL.name(alias), this);
    }

    @Override
    public SpeedAlertsHistory as(Name alias) {
        return new SpeedAlertsHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SpeedAlertsHistory rename(String name) {
        return new SpeedAlertsHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SpeedAlertsHistory rename(Name name) {
        return new SpeedAlertsHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<LocalDateTime, Long, Float> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
