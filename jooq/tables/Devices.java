/*
 * This file is generated by jOOQ.
 */
package com.tesis.jooq.tables;


import com.tesis.jooq.Indexes;
import com.tesis.jooq.Keys;
import com.tesis.jooq.Public;
import com.tesis.jooq.tables.records.DevicesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Devices extends TableImpl<DevicesRecord> {

    private static final long serialVersionUID = 1936992114;

    /**
     * The reference instance of <code>public.devices</code>
     */
    public static final Devices DEVICES = new Devices();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DevicesRecord> getRecordType() {
        return DevicesRecord.class;
    }

    /**
     * The column <code>public.devices.id</code>.
     */
    public final TableField<DevicesRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.devices.deleted_at</code>.
     */
    public final TableField<DevicesRecord, Timestamp> DELETED_AT = createField("deleted_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.devices.last_updated</code>.
     */
    public final TableField<DevicesRecord, Timestamp> LAST_UPDATED = createField("last_updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.devices.model</code>.
     */
    public final TableField<DevicesRecord, String> MODEL = createField("model", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.devices.software_version</code>.
     */
    public final TableField<DevicesRecord, String> SOFTWARE_VERSION = createField("software_version", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>public.devices</code> table reference
     */
    public Devices() {
        this(DSL.name("devices"), null);
    }

    /**
     * Create an aliased <code>public.devices</code> table reference
     */
    public Devices(String alias) {
        this(DSL.name(alias), DEVICES);
    }

    /**
     * Create an aliased <code>public.devices</code> table reference
     */
    public Devices(Name alias) {
        this(alias, DEVICES);
    }

    private Devices(Name alias, Table<DevicesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Devices(Name alias, Table<DevicesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Devices(Table<O> child, ForeignKey<O, DevicesRecord> key) {
        super(child, key, DEVICES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DEVICES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DevicesRecord> getPrimaryKey() {
        return Keys.DEVICES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DevicesRecord>> getKeys() {
        return Arrays.<UniqueKey<DevicesRecord>>asList(Keys.DEVICES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Devices as(String alias) {
        return new Devices(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Devices as(Name alias) {
        return new Devices(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Devices rename(String name) {
        return new Devices(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Devices rename(Name name) {
        return new Devices(name, null);
    }
}
